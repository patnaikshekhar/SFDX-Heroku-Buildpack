#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

START_TIME=$SECONDS

# set -x
set -o errexit      # always exit on error
set -o pipefail     # don't ignore exit codes when piping output
unset GIT_DIR       # Avoid GIT_DIR leak from previous build steps

### Configure directories
BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}
BP_DIR=$(cd $(dirname ${0:-}); cd ..; pwd)

### Load additional functions
source $BP_DIR/lib/common.sh

# set defaults for optional config vars
: ${SFDX_BUILDPACK_DEBUG:="true"}

### Execute
header 'Welcome to salesforce-buildpack!'
log "Exporting environment directories ..."
export_env "$ENV_DIR"

# Setup local paths
log "Setting up paths ..."

debug "BUILD_DIR: $BUILD_DIR"
debug "CACHE_DIR: $CACHE_DIR"
debug "ENV_DIR: $ENV_DIR" 
debug "BP_DIR: $BP_DIR"

# CLI details
SFDX_VERSION=$(sfdx version)
debug "sfdx version: $SFDX_VERSION"

# Log config
debug "STAGE: $STAGE"
debug "SFDX_AUTH_URL: $SFDX_AUTH_URL"
debug "SFDX_BUILDPACK_DEBUG: $SFDX_BUILDPACK_DEBUG"
debug "CI: $CI"
debug "HEROKU_TEST_RUN_BRANCH: $HEROKU_TEST_RUN_BRANCH"
debug "HEROKU_TEST_RUN_COMMIT_VERSION: $HEROKU_TEST_RUN_COMMIT_VERSION"
debug "HEROKU_TEST_RUN_ID: $HEROKU_TEST_RUN_ID"
debug "STACK: $STACK"
debug "SOURCE_VERSION: $SOURCE_VERSION"
debug "SFDX_INSTALL_PACKAGE_VERSION: $SFDX_INSTALL_PACKAGE_VERSION"
debug "SFDX_CREATE_PACKAGE_VERSION: $SFDX_CREATE_PACKAGE_VERSION"
debug "SFDX_PACKAGE_NAME: $SFDX_PACKAGE_NAME"

# Go to BUILD_DIR
cd $BUILD_DIR

vendorDir="vendor/sfdx"
mkdir -p $BUILD_DIR/$vendorDir
AUTH_FILE=$BUILD_DIR/$vendorDir/sfdxurl
MDAPI_DIR="mdapi"
mkdir -p $BUILD_DIR/$MDAPI_DIR

echo "Authorising Sandbox"
sfdx force:auth:sfdxurl:store -f $AUTH_FILE -a Dest

echo "Converting Source"
sfdx force:source:convert --outputdir $BUILD_DIR/$MDAPI_DIR

echo "Deploying to Sandbox"
sfdx force:mdapi:deploy --verbose --testlevel RunLocalTests --targetusername Dest --deploydir $BUILD_DIR/$MDAPI_DIR

echo "Waiting for deploy to complete"
sfdx force:mdapi:deploy:report --targetusername Dest

header "DONE! Completed in $(($SECONDS - $START_TIME))s"
exit 0